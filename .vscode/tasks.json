{
    "version": "2.0.0",
    "tasks": 
	[
        {
            "label": "clean",
            "group": "none",
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile",
            "type": "shell",
            "command": "dotnet",
            "linux": {
                "options": {
                    "env": {
                        "FrameworkPathOverride": "/lib/mono/4.6.1-api/"
                    }
                }
            },
            "args": [
                "clean"
            ]
        },
        {
            "label": "build (Debug)",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile",
            "type": "shell",
            "command": "dotnet",
            "linux": {
                "options": {
                    "env": {
                        "FrameworkPathOverride": "/lib/mono/4.6.1-api/"
                    }
                }
            },
            "args": [
                "build",
                "-c",
                "Debug"
            ]
        },
        {
            "label": "build (Debug) and pack",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile",
            "type": "shell",
            "command": "dotnet",
            "linux": {
                "options": {
                    "env": {
                        "FrameworkPathOverride": "/lib/mono/4.6.1-api/"
                    }
                }
            },
            "args": [
                "build",
                "-c",
                "Debug",
                "-p:ReleasePack=1",
                "-p:ReleasePackName=\"_debug\""
            ]
        },
        {
            "label": "build (Release) and pack",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile",
            "type": "shell",
            "command": "dotnet",
            "linux": {
                "options": {
                    "env": {
                        "FrameworkPathOverride": "/lib/mono/4.6.1-api/"
                    }
                }
            },
            "args": [
                "build",
                "-c",
                "Release",
                "-p:ReleasePack=1",
                "-p:ReleasePackName=\"\""
            ]
        },
        {
            "label": "Prepare Server (Survival)",
            "type": "shell",
            "command": "$path = '\"{WorldConfig:{SaveFileLocation:''${env:VINTAGE_STORY_DEV_DATA}/server/Saves/Survival ${workspaceFolderBasename}.vcdbs'',PlayStyle:''surviveandbuild'',WorldType:''standard'',DefaultRoleCode:''suplayer''}}\"'; & '${env:VINTAGE_STORY}/VintagestoryServer.exe' --dataPath '${env:VINTAGE_STORY_DEV_DATA}/server' --setconfig $path.Replace('\\', '/'); exit",
            "linux": {
                //"command": "path='{WorldConfig:{SaveFileLocation:\"${env:VINTAGE_STORY_DEV_DATA}/server/Saves/Survival ${workspaceFolderBasename}.vcdbs\",PlayStyle:\"surviveandbuild\",WorldType:\"standard\",DefaultRoleCode:\"suplayer\"}}' && '${env:VINTAGE_STORY}/VintagestoryServer.exe' --dataPath '${env:VINTAGE_STORY_DEV_DATA}/server' --setconfig \"$path\"; exit",
                // Sadly the --setconfig server parameter crashes the VS server on linux, so here's an alternate way. Requires nodeJS
                "command": "node -p \"JSON.stringify({...require('${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json'), WorldConfig: {SaveFileLocation:'${env:VINTAGE_STORY_DEV_DATA}/server/Saves/Survival ${workspaceFolderBasename}.vcdbs',PlayStyle:'surviveandbuild',WorldType:'standard',DefaultRoleCode:'suplayer'} }, null, 2)\" > '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json_new' && cat '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json_new' > '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json' && rm '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json_new'",
            },
            "dependsOrder": "sequence",
            "dependsOn": ["build (Debug)"]
        },
        {
            "label": "Prepare Server (Superflat)",
            "type": "shell",
            "command": "$path = '\"{WorldConfig:{SaveFileLocation:''${env:VINTAGE_STORY_DEV_DATA}/server/Saves/Superflat ${workspaceFolderBasename}.vcdbs'',PlayStyle:''creativebuilding'',WorldType:''superflat'',DefaultRoleCode:''crplayer''}}\"'; & '${env:VINTAGE_STORY}/VintagestoryServer.exe' --dataPath '${env:VINTAGE_STORY_DEV_DATA}/server' --setconfig $path.Replace('\\', '/'); exit",
            "linux": {
                //"command": "path='{WorldConfig:{SaveFileLocation:\"${env:VINTAGE_STORY_DEV_DATA}/server/Saves/Superflat ${workspaceFolderBasename}.vcdbs\",PlayStyle:\"creativebuilding\",WorldType:\"superflat\",DefaultRoleCode:\"crplayer\"}}' && '${env:VINTAGE_STORY}/VintagestoryServer.exe' --dataPath '${env:VINTAGE_STORY_DEV_DATA}/server' --setconfig \"$path\"; exit",
                "command": "node -p \"JSON.stringify({...require('${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json'), WorldConfig: {SaveFileLocation:'${env:VINTAGE_STORY_DEV_DATA}/server/Saves/Superflat ${workspaceFolderBasename}.vcdbs',PlayStyle:'creativebuilding',WorldType:'superflat',DefaultRoleCode:'crplayer'} }, null, 2)\" > '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json_new' && cat '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json_new' > '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json' && rm '${env:VINTAGE_STORY_DEV_DATA}/server/serverconfig.json_new'",
            },
            "dependsOrder": "sequence",
            "dependsOn": ["build (Debug)"]
        },

		{
            "label": "build Launcher",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "silent"
            },
            "problemMatcher": "$msCompile",
            "type": "shell",
            "command": "dotnet",
            "linux": {
                "options": {
                    "env": {
                        "FrameworkPathOverride": "/lib/mono/4.6.1-api/"
                    }
                }
            },
            "args": [
                "build",
				"Launcher/VSCodeDevLauncher.csproj",
                "-c",
                "Debug"
            ]
        },
		{
			"label": "watchTask",
			"command": "dotnet",
			"isBackground": true,
			"type": "process",
			"linux": {
				"options": {
					"env": {
						"DOTNET_USE_POLLING_FILE_WATCHER": "true"
					}
				}
			},
			"args": [
				"watch",
				"--project",
				"VSCodeDevLauncher.csproj",
				"--verbose",
			],
			"options": {
				"cwd": "${workspaceFolder}/Launcher"
			},
			"problemMatcher": "$msCompile"
		}
    ]
  }